ARM GAS  /tmp/ccpl7Scc.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text.MX_GPIO_Init,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	MX_GPIO_Init:
  25              	.LFB75:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END PTD */
  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PD */
ARM GAS  /tmp/ccpl7Scc.s 			page 2


  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* USER CODE END PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PM */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/main.c **** UART_HandleTypeDef huart2;
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* USER CODE BEGIN PV */
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* USER CODE END PV */
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  50:Core/Src/main.c **** void SystemClock_Config(void);
  51:Core/Src/main.c **** static void MX_GPIO_Init(void);
  52:Core/Src/main.c **** static void MX_USART2_UART_Init(void);
  53:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* USER CODE END PFP */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  58:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /* USER CODE END 0 */
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** /**
  63:Core/Src/main.c ****   * @brief  The application entry point.
  64:Core/Src/main.c ****   * @retval int
  65:Core/Src/main.c ****   */
  66:Core/Src/main.c **** int main(void)
  67:Core/Src/main.c **** {
  68:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  69:Core/Src/main.c **** 
  70:Core/Src/main.c ****   /* USER CODE END 1 */
  71:Core/Src/main.c **** 
  72:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  73:Core/Src/main.c **** 
  74:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  75:Core/Src/main.c ****   HAL_Init();
  76:Core/Src/main.c **** 
  77:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  78:Core/Src/main.c **** 
  79:Core/Src/main.c ****   /* USER CODE END Init */
  80:Core/Src/main.c **** 
  81:Core/Src/main.c ****   /* Configure the system clock */
  82:Core/Src/main.c ****   SystemClock_Config();
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****   /* USER CODE END SysInit */
  87:Core/Src/main.c **** 
  88:Core/Src/main.c ****   /* Initialize all configured peripherals */
  89:Core/Src/main.c ****   MX_GPIO_Init();
  90:Core/Src/main.c ****   MX_USART2_UART_Init();
ARM GAS  /tmp/ccpl7Scc.s 			page 3


  91:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  92:Core/Src/main.c **** 
  93:Core/Src/main.c ****   /* USER CODE END 2 */
  94:Core/Src/main.c **** 
  95:Core/Src/main.c ****   /* Infinite loop */
  96:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
  97:Core/Src/main.c ****   while (1)
  98:Core/Src/main.c ****   {
  99:Core/Src/main.c ****     HAL_GPIO_TogglePin(GPIOA, LD2_Pin);
 100:Core/Src/main.c ****     HAL_Delay(1000);
 101:Core/Src/main.c ****     /* USER CODE END WHILE */
 102:Core/Src/main.c **** 
 103:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 104:Core/Src/main.c ****   }
 105:Core/Src/main.c ****   /* USER CODE END 3 */
 106:Core/Src/main.c **** }
 107:Core/Src/main.c **** 
 108:Core/Src/main.c **** /**
 109:Core/Src/main.c ****   * @brief System Clock Configuration
 110:Core/Src/main.c ****   * @retval None
 111:Core/Src/main.c ****   */
 112:Core/Src/main.c **** void SystemClock_Config(void)
 113:Core/Src/main.c **** {
 114:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 115:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 116:Core/Src/main.c **** 
 117:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 118:Core/Src/main.c ****   */
 119:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 120:Core/Src/main.c **** 
 121:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 122:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 123:Core/Src/main.c ****   */
 124:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 125:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 126:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 127:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 128:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 129:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL6;
 130:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLDIV = RCC_PLL_DIV3;
 131:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 132:Core/Src/main.c ****   {
 133:Core/Src/main.c ****     Error_Handler();
 134:Core/Src/main.c ****   }
 135:Core/Src/main.c **** 
 136:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 137:Core/Src/main.c ****   */
 138:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 139:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 140:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 141:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 142:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 143:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 144:Core/Src/main.c **** 
 145:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 146:Core/Src/main.c ****   {
 147:Core/Src/main.c ****     Error_Handler();
ARM GAS  /tmp/ccpl7Scc.s 			page 4


 148:Core/Src/main.c ****   }
 149:Core/Src/main.c **** }
 150:Core/Src/main.c **** 
 151:Core/Src/main.c **** /**
 152:Core/Src/main.c ****   * @brief USART2 Initialization Function
 153:Core/Src/main.c ****   * @param None
 154:Core/Src/main.c ****   * @retval None
 155:Core/Src/main.c ****   */
 156:Core/Src/main.c **** static void MX_USART2_UART_Init(void)
 157:Core/Src/main.c **** {
 158:Core/Src/main.c **** 
 159:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 0 */
 160:Core/Src/main.c **** 
 161:Core/Src/main.c ****   /* USER CODE END USART2_Init 0 */
 162:Core/Src/main.c **** 
 163:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 1 */
 164:Core/Src/main.c **** 
 165:Core/Src/main.c ****   /* USER CODE END USART2_Init 1 */
 166:Core/Src/main.c ****   huart2.Instance = USART2;
 167:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 168:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 169:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 170:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 171:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 172:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 173:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 174:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 175:Core/Src/main.c ****   {
 176:Core/Src/main.c ****     Error_Handler();
 177:Core/Src/main.c ****   }
 178:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 2 */
 179:Core/Src/main.c **** 
 180:Core/Src/main.c ****   /* USER CODE END USART2_Init 2 */
 181:Core/Src/main.c **** 
 182:Core/Src/main.c **** }
 183:Core/Src/main.c **** 
 184:Core/Src/main.c **** /**
 185:Core/Src/main.c ****   * @brief GPIO Initialization Function
 186:Core/Src/main.c ****   * @param None
 187:Core/Src/main.c ****   * @retval None
 188:Core/Src/main.c ****   */
 189:Core/Src/main.c **** static void MX_GPIO_Init(void)
 190:Core/Src/main.c **** {
  26              		.loc 1 190 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 40
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 30B5     		push	{r4, r5, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 12
  33              		.cfi_offset 4, -12
  34              		.cfi_offset 5, -8
  35              		.cfi_offset 14, -4
  36 0002 8BB0     		sub	sp, sp, #44
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 56
 191:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
ARM GAS  /tmp/ccpl7Scc.s 			page 5


  39              		.loc 1 191 3 view .LVU1
  40              		.loc 1 191 20 is_stmt 0 view .LVU2
  41 0004 0024     		movs	r4, #0
  42 0006 0594     		str	r4, [sp, #20]
  43 0008 0694     		str	r4, [sp, #24]
  44 000a 0794     		str	r4, [sp, #28]
  45 000c 0894     		str	r4, [sp, #32]
  46 000e 0994     		str	r4, [sp, #36]
 192:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 193:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 194:Core/Src/main.c **** 
 195:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 196:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  47              		.loc 1 196 3 is_stmt 1 view .LVU3
  48              	.LBB4:
  49              		.loc 1 196 3 view .LVU4
  50              		.loc 1 196 3 view .LVU5
  51 0010 204B     		ldr	r3, .L3
  52 0012 DA69     		ldr	r2, [r3, #28]
  53 0014 42F00402 		orr	r2, r2, #4
  54 0018 DA61     		str	r2, [r3, #28]
  55              		.loc 1 196 3 view .LVU6
  56 001a DA69     		ldr	r2, [r3, #28]
  57 001c 02F00402 		and	r2, r2, #4
  58 0020 0192     		str	r2, [sp, #4]
  59              		.loc 1 196 3 view .LVU7
  60 0022 019A     		ldr	r2, [sp, #4]
  61              	.LBE4:
  62              		.loc 1 196 3 view .LVU8
 197:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  63              		.loc 1 197 3 view .LVU9
  64              	.LBB5:
  65              		.loc 1 197 3 view .LVU10
  66              		.loc 1 197 3 view .LVU11
  67 0024 DA69     		ldr	r2, [r3, #28]
  68 0026 42F02002 		orr	r2, r2, #32
  69 002a DA61     		str	r2, [r3, #28]
  70              		.loc 1 197 3 view .LVU12
  71 002c DA69     		ldr	r2, [r3, #28]
  72 002e 02F02002 		and	r2, r2, #32
  73 0032 0292     		str	r2, [sp, #8]
  74              		.loc 1 197 3 view .LVU13
  75 0034 029A     		ldr	r2, [sp, #8]
  76              	.LBE5:
  77              		.loc 1 197 3 view .LVU14
 198:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  78              		.loc 1 198 3 view .LVU15
  79              	.LBB6:
  80              		.loc 1 198 3 view .LVU16
  81              		.loc 1 198 3 view .LVU17
  82 0036 DA69     		ldr	r2, [r3, #28]
  83 0038 42F00102 		orr	r2, r2, #1
  84 003c DA61     		str	r2, [r3, #28]
  85              		.loc 1 198 3 view .LVU18
  86 003e DA69     		ldr	r2, [r3, #28]
  87 0040 02F00102 		and	r2, r2, #1
  88 0044 0392     		str	r2, [sp, #12]
ARM GAS  /tmp/ccpl7Scc.s 			page 6


  89              		.loc 1 198 3 view .LVU19
  90 0046 039A     		ldr	r2, [sp, #12]
  91              	.LBE6:
  92              		.loc 1 198 3 view .LVU20
 199:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  93              		.loc 1 199 3 view .LVU21
  94              	.LBB7:
  95              		.loc 1 199 3 view .LVU22
  96              		.loc 1 199 3 view .LVU23
  97 0048 DA69     		ldr	r2, [r3, #28]
  98 004a 42F00202 		orr	r2, r2, #2
  99 004e DA61     		str	r2, [r3, #28]
 100              		.loc 1 199 3 view .LVU24
 101 0050 DB69     		ldr	r3, [r3, #28]
 102 0052 03F00203 		and	r3, r3, #2
 103 0056 0493     		str	r3, [sp, #16]
 104              		.loc 1 199 3 view .LVU25
 105 0058 049B     		ldr	r3, [sp, #16]
 106              	.LBE7:
 107              		.loc 1 199 3 view .LVU26
 200:Core/Src/main.c **** 
 201:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 202:Core/Src/main.c ****   HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, GPIO_PIN_RESET);
 108              		.loc 1 202 3 view .LVU27
 109 005a 0F4D     		ldr	r5, .L3+4
 110 005c 2246     		mov	r2, r4
 111 005e 2021     		movs	r1, #32
 112 0060 2846     		mov	r0, r5
 113 0062 FFF7FEFF 		bl	HAL_GPIO_WritePin
 114              	.LVL0:
 203:Core/Src/main.c **** 
 204:Core/Src/main.c ****   /*Configure GPIO pin : B1_Pin */
 205:Core/Src/main.c ****   GPIO_InitStruct.Pin = B1_Pin;
 115              		.loc 1 205 3 view .LVU28
 116              		.loc 1 205 23 is_stmt 0 view .LVU29
 117 0066 4FF40053 		mov	r3, #8192
 118 006a 0593     		str	r3, [sp, #20]
 206:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 119              		.loc 1 206 3 is_stmt 1 view .LVU30
 120              		.loc 1 206 24 is_stmt 0 view .LVU31
 121 006c 4FF48813 		mov	r3, #1114112
 122 0070 0693     		str	r3, [sp, #24]
 207:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 123              		.loc 1 207 3 is_stmt 1 view .LVU32
 124              		.loc 1 207 24 is_stmt 0 view .LVU33
 125 0072 0794     		str	r4, [sp, #28]
 208:Core/Src/main.c ****   HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 126              		.loc 1 208 3 is_stmt 1 view .LVU34
 127 0074 05A9     		add	r1, sp, #20
 128 0076 0948     		ldr	r0, .L3+8
 129 0078 FFF7FEFF 		bl	HAL_GPIO_Init
 130              	.LVL1:
 209:Core/Src/main.c **** 
 210:Core/Src/main.c ****   /*Configure GPIO pin : LD2_Pin */
 211:Core/Src/main.c ****   GPIO_InitStruct.Pin = LD2_Pin;
 131              		.loc 1 211 3 view .LVU35
 132              		.loc 1 211 23 is_stmt 0 view .LVU36
ARM GAS  /tmp/ccpl7Scc.s 			page 7


 133 007c 2023     		movs	r3, #32
 134 007e 0593     		str	r3, [sp, #20]
 212:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 135              		.loc 1 212 3 is_stmt 1 view .LVU37
 136              		.loc 1 212 24 is_stmt 0 view .LVU38
 137 0080 0123     		movs	r3, #1
 138 0082 0693     		str	r3, [sp, #24]
 213:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 139              		.loc 1 213 3 is_stmt 1 view .LVU39
 140              		.loc 1 213 24 is_stmt 0 view .LVU40
 141 0084 0794     		str	r4, [sp, #28]
 214:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 142              		.loc 1 214 3 is_stmt 1 view .LVU41
 143              		.loc 1 214 25 is_stmt 0 view .LVU42
 144 0086 0894     		str	r4, [sp, #32]
 215:Core/Src/main.c ****   HAL_GPIO_Init(LD2_GPIO_Port, &GPIO_InitStruct);
 145              		.loc 1 215 3 is_stmt 1 view .LVU43
 146 0088 05A9     		add	r1, sp, #20
 147 008a 2846     		mov	r0, r5
 148 008c FFF7FEFF 		bl	HAL_GPIO_Init
 149              	.LVL2:
 216:Core/Src/main.c **** 
 217:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 218:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 219:Core/Src/main.c **** }
 150              		.loc 1 219 1 is_stmt 0 view .LVU44
 151 0090 0BB0     		add	sp, sp, #44
 152              	.LCFI2:
 153              		.cfi_def_cfa_offset 12
 154              		@ sp needed
 155 0092 30BD     		pop	{r4, r5, pc}
 156              	.L4:
 157              		.align	2
 158              	.L3:
 159 0094 00380240 		.word	1073887232
 160 0098 00000240 		.word	1073872896
 161 009c 00080240 		.word	1073874944
 162              		.cfi_endproc
 163              	.LFE75:
 165              		.section	.text.Error_Handler,"ax",%progbits
 166              		.align	1
 167              		.global	Error_Handler
 168              		.syntax unified
 169              		.thumb
 170              		.thumb_func
 172              	Error_Handler:
 173              	.LFB76:
 220:Core/Src/main.c **** 
 221:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 222:Core/Src/main.c **** 
 223:Core/Src/main.c **** /* USER CODE END 4 */
 224:Core/Src/main.c **** 
 225:Core/Src/main.c **** /**
 226:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 227:Core/Src/main.c ****   * @retval None
 228:Core/Src/main.c ****   */
 229:Core/Src/main.c **** void Error_Handler(void)
ARM GAS  /tmp/ccpl7Scc.s 			page 8


 230:Core/Src/main.c **** {
 174              		.loc 1 230 1 is_stmt 1 view -0
 175              		.cfi_startproc
 176              		@ Volatile: function does not return.
 177              		@ args = 0, pretend = 0, frame = 0
 178              		@ frame_needed = 0, uses_anonymous_args = 0
 179              		@ link register save eliminated.
 231:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 232:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 233:Core/Src/main.c ****   __disable_irq();
 180              		.loc 1 233 3 view .LVU46
 181              	.LBB8:
 182              	.LBI8:
 183              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
ARM GAS  /tmp/ccpl7Scc.s 			page 9


  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
ARM GAS  /tmp/ccpl7Scc.s 			page 10


 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 184              		.loc 2 140 27 view .LVU47
 185              	.LBB9:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 186              		.loc 2 142 3 view .LVU48
 187              		.syntax unified
 188              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 189 0000 72B6     		cpsid i
 190              	@ 0 "" 2
 191              		.thumb
 192              		.syntax unified
 193              	.L6:
 194              	.LBE9:
 195              	.LBE8:
 234:Core/Src/main.c ****   while (1)
 196              		.loc 1 234 3 view .LVU49
 235:Core/Src/main.c ****   {
ARM GAS  /tmp/ccpl7Scc.s 			page 11


 236:Core/Src/main.c ****   }
 197              		.loc 1 236 3 view .LVU50
 234:Core/Src/main.c ****   while (1)
 198              		.loc 1 234 9 view .LVU51
 199 0002 FEE7     		b	.L6
 200              		.cfi_endproc
 201              	.LFE76:
 203              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 204              		.align	1
 205              		.syntax unified
 206              		.thumb
 207              		.thumb_func
 209              	MX_USART2_UART_Init:
 210              	.LFB74:
 157:Core/Src/main.c **** 
 211              		.loc 1 157 1 view -0
 212              		.cfi_startproc
 213              		@ args = 0, pretend = 0, frame = 0
 214              		@ frame_needed = 0, uses_anonymous_args = 0
 215 0000 08B5     		push	{r3, lr}
 216              	.LCFI3:
 217              		.cfi_def_cfa_offset 8
 218              		.cfi_offset 3, -8
 219              		.cfi_offset 14, -4
 166:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 220              		.loc 1 166 3 view .LVU53
 166:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 221              		.loc 1 166 19 is_stmt 0 view .LVU54
 222 0002 0A48     		ldr	r0, .L11
 223 0004 0A4B     		ldr	r3, .L11+4
 224 0006 0360     		str	r3, [r0]
 167:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 225              		.loc 1 167 3 is_stmt 1 view .LVU55
 167:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 226              		.loc 1 167 24 is_stmt 0 view .LVU56
 227 0008 4FF4E133 		mov	r3, #115200
 228 000c 4360     		str	r3, [r0, #4]
 168:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 229              		.loc 1 168 3 is_stmt 1 view .LVU57
 168:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 230              		.loc 1 168 26 is_stmt 0 view .LVU58
 231 000e 0023     		movs	r3, #0
 232 0010 8360     		str	r3, [r0, #8]
 169:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 233              		.loc 1 169 3 is_stmt 1 view .LVU59
 169:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 234              		.loc 1 169 24 is_stmt 0 view .LVU60
 235 0012 C360     		str	r3, [r0, #12]
 170:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 236              		.loc 1 170 3 is_stmt 1 view .LVU61
 170:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 237              		.loc 1 170 22 is_stmt 0 view .LVU62
 238 0014 0361     		str	r3, [r0, #16]
 171:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 239              		.loc 1 171 3 is_stmt 1 view .LVU63
 171:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 240              		.loc 1 171 20 is_stmt 0 view .LVU64
ARM GAS  /tmp/ccpl7Scc.s 			page 12


 241 0016 0C22     		movs	r2, #12
 242 0018 4261     		str	r2, [r0, #20]
 172:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 243              		.loc 1 172 3 is_stmt 1 view .LVU65
 172:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 244              		.loc 1 172 25 is_stmt 0 view .LVU66
 245 001a 8361     		str	r3, [r0, #24]
 173:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 246              		.loc 1 173 3 is_stmt 1 view .LVU67
 173:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 247              		.loc 1 173 28 is_stmt 0 view .LVU68
 248 001c C361     		str	r3, [r0, #28]
 174:Core/Src/main.c ****   {
 249              		.loc 1 174 3 is_stmt 1 view .LVU69
 174:Core/Src/main.c ****   {
 250              		.loc 1 174 7 is_stmt 0 view .LVU70
 251 001e FFF7FEFF 		bl	HAL_UART_Init
 252              	.LVL3:
 174:Core/Src/main.c ****   {
 253              		.loc 1 174 6 discriminator 1 view .LVU71
 254 0022 00B9     		cbnz	r0, .L10
 182:Core/Src/main.c **** 
 255              		.loc 1 182 1 view .LVU72
 256 0024 08BD     		pop	{r3, pc}
 257              	.L10:
 176:Core/Src/main.c ****   }
 258              		.loc 1 176 5 is_stmt 1 view .LVU73
 259 0026 FFF7FEFF 		bl	Error_Handler
 260              	.LVL4:
 261              	.L12:
 262 002a 00BF     		.align	2
 263              	.L11:
 264 002c 00000000 		.word	huart2
 265 0030 00440040 		.word	1073759232
 266              		.cfi_endproc
 267              	.LFE74:
 269              		.section	.text.SystemClock_Config,"ax",%progbits
 270              		.align	1
 271              		.global	SystemClock_Config
 272              		.syntax unified
 273              		.thumb
 274              		.thumb_func
 276              	SystemClock_Config:
 277              	.LFB73:
 113:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 278              		.loc 1 113 1 view -0
 279              		.cfi_startproc
 280              		@ args = 0, pretend = 0, frame = 72
 281              		@ frame_needed = 0, uses_anonymous_args = 0
 282 0000 00B5     		push	{lr}
 283              	.LCFI4:
 284              		.cfi_def_cfa_offset 4
 285              		.cfi_offset 14, -4
 286 0002 93B0     		sub	sp, sp, #76
 287              	.LCFI5:
 288              		.cfi_def_cfa_offset 80
 114:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
ARM GAS  /tmp/ccpl7Scc.s 			page 13


 289              		.loc 1 114 3 view .LVU75
 114:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 290              		.loc 1 114 22 is_stmt 0 view .LVU76
 291 0004 3422     		movs	r2, #52
 292 0006 0021     		movs	r1, #0
 293 0008 05A8     		add	r0, sp, #20
 294 000a FFF7FEFF 		bl	memset
 295              	.LVL5:
 115:Core/Src/main.c **** 
 296              		.loc 1 115 3 is_stmt 1 view .LVU77
 115:Core/Src/main.c **** 
 297              		.loc 1 115 22 is_stmt 0 view .LVU78
 298 000e 0023     		movs	r3, #0
 299 0010 0093     		str	r3, [sp]
 300 0012 0193     		str	r3, [sp, #4]
 301 0014 0293     		str	r3, [sp, #8]
 302 0016 0393     		str	r3, [sp, #12]
 303 0018 0493     		str	r3, [sp, #16]
 119:Core/Src/main.c **** 
 304              		.loc 1 119 3 is_stmt 1 view .LVU79
 305 001a 1649     		ldr	r1, .L19
 306 001c 0A68     		ldr	r2, [r1]
 307 001e 22F4C052 		bic	r2, r2, #6144
 308 0022 42F40062 		orr	r2, r2, #2048
 309 0026 0A60     		str	r2, [r1]
 124:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 310              		.loc 1 124 3 view .LVU80
 124:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 311              		.loc 1 124 36 is_stmt 0 view .LVU81
 312 0028 0222     		movs	r2, #2
 313 002a 0592     		str	r2, [sp, #20]
 125:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 314              		.loc 1 125 3 is_stmt 1 view .LVU82
 125:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 315              		.loc 1 125 30 is_stmt 0 view .LVU83
 316 002c 0121     		movs	r1, #1
 317 002e 0891     		str	r1, [sp, #32]
 126:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 318              		.loc 1 126 3 is_stmt 1 view .LVU84
 126:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 319              		.loc 1 126 41 is_stmt 0 view .LVU85
 320 0030 1021     		movs	r1, #16
 321 0032 0991     		str	r1, [sp, #36]
 127:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 322              		.loc 1 127 3 is_stmt 1 view .LVU86
 127:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 323              		.loc 1 127 34 is_stmt 0 view .LVU87
 324 0034 0E92     		str	r2, [sp, #56]
 128:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL6;
 325              		.loc 1 128 3 is_stmt 1 view .LVU88
 128:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL6;
 326              		.loc 1 128 35 is_stmt 0 view .LVU89
 327 0036 0F93     		str	r3, [sp, #60]
 129:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLDIV = RCC_PLL_DIV3;
 328              		.loc 1 129 3 is_stmt 1 view .LVU90
 129:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLDIV = RCC_PLL_DIV3;
 329              		.loc 1 129 32 is_stmt 0 view .LVU91
ARM GAS  /tmp/ccpl7Scc.s 			page 14


 330 0038 4FF40023 		mov	r3, #524288
 331 003c 1093     		str	r3, [sp, #64]
 130:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 332              		.loc 1 130 3 is_stmt 1 view .LVU92
 130:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 333              		.loc 1 130 32 is_stmt 0 view .LVU93
 334 003e 4FF40003 		mov	r3, #8388608
 335 0042 1193     		str	r3, [sp, #68]
 131:Core/Src/main.c ****   {
 336              		.loc 1 131 3 is_stmt 1 view .LVU94
 131:Core/Src/main.c ****   {
 337              		.loc 1 131 7 is_stmt 0 view .LVU95
 338 0044 05A8     		add	r0, sp, #20
 339 0046 FFF7FEFF 		bl	HAL_RCC_OscConfig
 340              	.LVL6:
 131:Core/Src/main.c ****   {
 341              		.loc 1 131 6 discriminator 1 view .LVU96
 342 004a 78B9     		cbnz	r0, .L17
 138:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 343              		.loc 1 138 3 is_stmt 1 view .LVU97
 138:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 344              		.loc 1 138 31 is_stmt 0 view .LVU98
 345 004c 0F23     		movs	r3, #15
 346 004e 0093     		str	r3, [sp]
 140:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 347              		.loc 1 140 3 is_stmt 1 view .LVU99
 140:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 348              		.loc 1 140 34 is_stmt 0 view .LVU100
 349 0050 0323     		movs	r3, #3
 350 0052 0193     		str	r3, [sp, #4]
 141:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 351              		.loc 1 141 3 is_stmt 1 view .LVU101
 141:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 352              		.loc 1 141 35 is_stmt 0 view .LVU102
 353 0054 0023     		movs	r3, #0
 354 0056 0293     		str	r3, [sp, #8]
 142:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 355              		.loc 1 142 3 is_stmt 1 view .LVU103
 142:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 356              		.loc 1 142 36 is_stmt 0 view .LVU104
 357 0058 0393     		str	r3, [sp, #12]
 143:Core/Src/main.c **** 
 358              		.loc 1 143 3 is_stmt 1 view .LVU105
 143:Core/Src/main.c **** 
 359              		.loc 1 143 36 is_stmt 0 view .LVU106
 360 005a 0493     		str	r3, [sp, #16]
 145:Core/Src/main.c ****   {
 361              		.loc 1 145 3 is_stmt 1 view .LVU107
 145:Core/Src/main.c ****   {
 362              		.loc 1 145 7 is_stmt 0 view .LVU108
 363 005c 0121     		movs	r1, #1
 364 005e 6846     		mov	r0, sp
 365 0060 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 366              	.LVL7:
 145:Core/Src/main.c ****   {
 367              		.loc 1 145 6 discriminator 1 view .LVU109
 368 0064 20B9     		cbnz	r0, .L18
ARM GAS  /tmp/ccpl7Scc.s 			page 15


 149:Core/Src/main.c **** 
 369              		.loc 1 149 1 view .LVU110
 370 0066 13B0     		add	sp, sp, #76
 371              	.LCFI6:
 372              		.cfi_remember_state
 373              		.cfi_def_cfa_offset 4
 374              		@ sp needed
 375 0068 5DF804FB 		ldr	pc, [sp], #4
 376              	.L17:
 377              	.LCFI7:
 378              		.cfi_restore_state
 133:Core/Src/main.c ****   }
 379              		.loc 1 133 5 is_stmt 1 view .LVU111
 380 006c FFF7FEFF 		bl	Error_Handler
 381              	.LVL8:
 382              	.L18:
 147:Core/Src/main.c ****   }
 383              		.loc 1 147 5 view .LVU112
 384 0070 FFF7FEFF 		bl	Error_Handler
 385              	.LVL9:
 386              	.L20:
 387              		.align	2
 388              	.L19:
 389 0074 00700040 		.word	1073770496
 390              		.cfi_endproc
 391              	.LFE73:
 393              		.section	.text.main,"ax",%progbits
 394              		.align	1
 395              		.global	main
 396              		.syntax unified
 397              		.thumb
 398              		.thumb_func
 400              	main:
 401              	.LFB72:
  67:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 402              		.loc 1 67 1 view -0
 403              		.cfi_startproc
 404              		@ Volatile: function does not return.
 405              		@ args = 0, pretend = 0, frame = 0
 406              		@ frame_needed = 0, uses_anonymous_args = 0
 407 0000 08B5     		push	{r3, lr}
 408              	.LCFI8:
 409              		.cfi_def_cfa_offset 8
 410              		.cfi_offset 3, -8
 411              		.cfi_offset 14, -4
  75:Core/Src/main.c **** 
 412              		.loc 1 75 3 view .LVU114
 413 0002 FFF7FEFF 		bl	HAL_Init
 414              	.LVL10:
  82:Core/Src/main.c **** 
 415              		.loc 1 82 3 view .LVU115
 416 0006 FFF7FEFF 		bl	SystemClock_Config
 417              	.LVL11:
  89:Core/Src/main.c ****   MX_USART2_UART_Init();
 418              		.loc 1 89 3 view .LVU116
 419 000a FFF7FEFF 		bl	MX_GPIO_Init
 420              	.LVL12:
ARM GAS  /tmp/ccpl7Scc.s 			page 16


  90:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 421              		.loc 1 90 3 view .LVU117
 422 000e FFF7FEFF 		bl	MX_USART2_UART_Init
 423              	.LVL13:
 424              	.L22:
  97:Core/Src/main.c ****   {
 425              		.loc 1 97 3 view .LVU118
  99:Core/Src/main.c ****     HAL_Delay(1000);
 426              		.loc 1 99 5 view .LVU119
 427 0012 2021     		movs	r1, #32
 428 0014 0348     		ldr	r0, .L24
 429 0016 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 430              	.LVL14:
 100:Core/Src/main.c ****     /* USER CODE END WHILE */
 431              		.loc 1 100 5 discriminator 1 view .LVU120
 432 001a 4FF47A70 		mov	r0, #1000
 433 001e FFF7FEFF 		bl	HAL_Delay
 434              	.LVL15:
  97:Core/Src/main.c ****   {
 435              		.loc 1 97 9 view .LVU121
 436 0022 F6E7     		b	.L22
 437              	.L25:
 438              		.align	2
 439              	.L24:
 440 0024 00000240 		.word	1073872896
 441              		.cfi_endproc
 442              	.LFE72:
 444              		.global	huart2
 445              		.section	.bss.huart2,"aw",%nobits
 446              		.align	2
 449              	huart2:
 450 0000 00000000 		.space	72
 450      00000000 
 450      00000000 
 450      00000000 
 450      00000000 
 451              		.text
 452              	.Letext0:
 453              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 454              		.file 4 "/usr/arm-none-eabi/include/sys/_stdint.h"
 455              		.file 5 "Drivers/CMSIS/Device/ST/STM32L1xx/Include/stm32l152xe.h"
 456              		.file 6 "Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_hal_def.h"
 457              		.file 7 "Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_hal_rcc.h"
 458              		.file 8 "Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_hal_gpio.h"
 459              		.file 9 "Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_hal_dma.h"
 460              		.file 10 "Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_hal_uart.h"
 461              		.file 11 "Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_hal.h"
 462              		.file 12 "<built-in>"
ARM GAS  /tmp/ccpl7Scc.s 			page 17


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
     /tmp/ccpl7Scc.s:19     .text.MX_GPIO_Init:00000000 $t
     /tmp/ccpl7Scc.s:24     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
     /tmp/ccpl7Scc.s:159    .text.MX_GPIO_Init:00000094 $d
     /tmp/ccpl7Scc.s:166    .text.Error_Handler:00000000 $t
     /tmp/ccpl7Scc.s:172    .text.Error_Handler:00000000 Error_Handler
     /tmp/ccpl7Scc.s:204    .text.MX_USART2_UART_Init:00000000 $t
     /tmp/ccpl7Scc.s:209    .text.MX_USART2_UART_Init:00000000 MX_USART2_UART_Init
     /tmp/ccpl7Scc.s:264    .text.MX_USART2_UART_Init:0000002c $d
     /tmp/ccpl7Scc.s:449    .bss.huart2:00000000 huart2
     /tmp/ccpl7Scc.s:270    .text.SystemClock_Config:00000000 $t
     /tmp/ccpl7Scc.s:276    .text.SystemClock_Config:00000000 SystemClock_Config
     /tmp/ccpl7Scc.s:389    .text.SystemClock_Config:00000074 $d
     /tmp/ccpl7Scc.s:394    .text.main:00000000 $t
     /tmp/ccpl7Scc.s:400    .text.main:00000000 main
     /tmp/ccpl7Scc.s:440    .text.main:00000024 $d
     /tmp/ccpl7Scc.s:446    .bss.huart2:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_UART_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_GPIO_TogglePin
HAL_Delay
